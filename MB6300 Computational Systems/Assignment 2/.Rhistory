View(sum_graph3_plot)
View(sum_graph3)
View(sum_graph3_plot)
length(igf)
dim(igf)
plot(igf)
length(igf)
list(igf)
sim <- simulateSymbolicModel(igf)
sim
#a
data(igf)
lengths(igf)
list(genes)
head(igf)
head(genes)
head(igf.genes)
head(igf.x)
lengths(igf)
head(igf.x)
igf.genes
igf$genes
lengths(igf$genes)
length(igf$genes)
igf$genes
View(igf_attractors)
igf_attractors <- getAttractors(igf)
length(igf_attractors$attractors)
igf_attractors$attractors
igf_attractors$states
igf_attractors
#d
getBasinOfAttraction <- function(attractorInfo,attractorNo)
{
stopifnot(inherits(attractorInfo,"AttractorInfo") || inherits(attractorInfo,"SymbolicSimulation"))
if (missing(attractorNo) || attractorNo <= 0 || attractorNo > length(attractorInfo$attractors))
stop("Please provide a valid attractor number!")
table <- getTransitionTable(attractorInfo)
return(table[which(table$attractorAssignment == attractorNo),,drop=FALSE])
}
attractors <- getAttractors(igf)
print(getBasinOfAttraction(attractors, 2))
trial= matrix(, nrow = 16, ncol = 1)
t(sapply(trial, function(x) list(min = min(x), avg = mean(x), max = max(x))))
trial= matrix(, nrow = 6, ncol = 1)
t(sapply(trial, function(x) list(min = min(x), avg = mean(x), max = max(x))))
t(sapply(trial, function(x) list(min = min(graph1), avg = mean(grap1), max = max(grap1))))
t(sapply(trial, function(x) list(min = min(graph1), avg = mean(graph1), max = max(graph1))))
trial= matrix(, nrow = 6, ncol = 1)
t(sapply(trial, function(x) list(min = min(graph1), avg = mean(graph1), max = max(graph1))))
t(sapply(trial, function(x) list(min = min(sum_graph1), avg = mean(sum_graph1), max = max(sum_graph1))))
x
trial= matrix(, nrow = 6, ncol = 1)
t(sapply(trial, function(x) list(min = min(x), avg = mean(x), max = max(x))))
t(sapply(trial, function(graph1) list(min = min(graph1), avg = mean(graph1)), max = max(graph1))))
trial= matrix(, nrow = 6, ncol = 1)
t(sapply(trial, function(graph1) list(min = min(graph1), avg = mean(graph1)), max = max(graph1))))
t(sapply(trial, function(graph1) list(min = min(graph1), avg = mean(graph1)), max = max(graph1)))
trial= matrix(, nrow = 6, ncol = 1)
t(sapply(trial, function(nodes(graph1)) list(min = min(nodes(graph1)), avg = mean(nodes(graph1)), max = max(nodes(graph1)))
trial= matrix(, nrow = 6, ncol = 1)
t(sapply(trial, function(graph1$nodes) list(min = min(graph1$nodes), avg = mean(graph1$nodes), max = max(graph1$nodes))
nodes_graph1 <- graph1$nodes
nodes_graph1 <- graph1@nodes
t(sapply(trial, function(graph1@nodes) list(min = min(graph1@nodes), avg = mean(graph1@nodes), max = max(graph1@nodes))
trial= matrix(, nrow = 6, ncol = 1)
t(sapply(trial, function(nodes_graph1) list(min = min(nodes_graph1), avg = mean(nodes_graph1), max = max(nodes_graph1))
trial= matrix(, nrow = 6, ncol = 1)
t(sapply(trial, function(nodes_graph1) list(min = min(nodes_graph1), avg = mean(nodes_graph1), max = max(nodes_graph1)))
t(sapply(trial, function(nodes_graph1) list(min = min(nodes_graph1), avg = mean(nodes_graph1), max = max(nodes_graph1)))
t(sapply(trial, function(nodes_graph1) list(min = min(nodes_graph1), avg = mean(nodes_graph1), max = max(nodes_graph1))))
nodes_graph1 <- graph1@nodes
trial= matrix(, nrow = 6, ncol = 1)
t(sapply(trial, function(nodes_graph1) list(min = min(nodes_graph1), avg = mean(nodes_graph1), max = max(nodes_graph1))))
network_info <- function(network){
info <- print(input_network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
y <- graph::degree(network)
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
}
network_info()
network_info(graph1)
network_info(igf)
network_info <- function(igf){
info <- print(input_network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
y <- graph::degree(network)
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
}
network_info
network_info(igf)
network_info <- function(network){
info <- print(input_network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
y <- graph::degree(network)
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
}
network_info <- function(network){
info <- print(input_network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
y <- graph::degree(network)
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
}
network_info(igf)
network_info <- function(network){
info <- print(igf)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
y <- graph::degree(network)
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
}
network_info(igf)
network_info()
network_info <- function(igf){
info <- print(igf)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
y <- graph::degree(igf)
output_mtx[1, 1] <- length(igf)
output_mtx[2, 1] <- length(getAttractors(igf))
}
network_info()
network_info()
t(sapply(trial, function(nodes_graph1) list(min = min(nodes_graph1), avg = mean(nodes_graph1), max = max(nodes_graph1))))
min(nodes_graph1)
mean(nodes_graph1)
mean(nodes_graph1)
network_info <- function(igf)
info <- print(igf)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
y <- graph::degree(igf)
output_mtx[1, 1] <- length(igf)
output_mtx[2, 1] <- length(getAttractors(igf))
network_info <- function(igf){
info <- print(igf)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
y <- graph::degree(igf)
output_mtx[1, 1] <- length(igf)
output_mtx[2, 1] <- length(getAttractors(igf))
}
network_info <- function(igf)
network_info(igf)
network_info <- function(igf)
network_info()
network_info()
network_info <- function(igf){
info <- data(igf)
print(info)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
y <- graph::degree(igf)
output_mtx[1, 1] <- length(igf)
output_mtx[2, 1] <- length(getAttractors(igf))
}
network_info()
network_info()
colnames(output_mtx) <- ("values")
\
network_info <- function(network){
info <- print(network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
y <- graph::degree(network)
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
}
network_info(igf)
network_info <- function(network){
info <- print(network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
}
network_info(igf)
View(output_mtx)
network_info <- function(network){
info <- print(network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
return(output_mtx)
}
View(output_mtx)
network_info(igf)
graph_info <- function(graph){
info <- print(graph)
output_mtx1 <- matrix(, ncol = 1, nrow = 6)
rownames(output_mtx1) <- c("no. genes", "no. attractors", "no. attractors", "no. attractors", "no. attractors", "no. attractors")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- mean(nodes(graph))
output_mtx1[2, 1] <- mean(nodes(graph))
output_mtx1[3, 1] <- mean(nodes(graph))
output_mtx1[4, 1] <- mean(nodes(graph))
output_mtx1[5, 1] <- mean(nodes(graph))
output_mtx1[6, 1] <- mean(nodes(graph))
return(output_mtx1)
}
graph_info(graph1)
graph_info <- function(graph){
info <- print(graph)
output_mtx1 <- matrix(, ncol = 1, nrow = 6)
rownames(output_mtx1) <- c("no. genes", "no. attractors", "no. attractors", "no. attractors", "no. attractors", "no. attractors")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- min(nodes(graph))
output_mtx1[2, 1] <- min(nodes(graph))
output_mtx1[3, 1] <- min(nodes(graph))
output_mtx1[4, 1] <- min(nodes(graph))
output_mtx1[5, 1] <- min(nodes(graph))
output_mtx1[6, 1] <- mmin(nodes(graph))
return(output_mtx1)
}
graph_info(graph1)
output_mtx1[6, 1] <- min(nodes(graph))
graph_info <- function(graph){
info <- print(graph)
output_mtx1 <- matrix(, ncol = 1, nrow = 6)
rownames(output_mtx1) <- c("no. genes", "no. attractors", "no. attractors", "no. attractors", "no. attractors", "no. attractors")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- min(nodes(graph))
output_mtx1[2, 1] <- min(nodes(graph))
output_mtx1[3, 1] <- min(nodes(graph))
output_mtx1[4, 1] <- min(nodes(graph))
output_mtx1[5, 1] <- min(nodes(graph))
output_mtx1[6, 1] <- min(nodes(graph))
return(output_mtx1)
}
graph_info(graph1)
graph_info <- function(graph){
info <- print(graph)
output_mtx1 <- matrix(, ncol = 1, nrow = 6)
rownames(output_mtx1) <- c("no. genes", "no. attractors", "no. attractors", "no. attractors", "no. attractors", "no. attractors")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- min(nodes(graph))
output_mtx1[2, 1] <- max(nodes(graph))
output_mtx1[3, 1] <- meadian(nodes(graph))
output_mtx1[4, 1] <- mean(nodes(graph))
output_mtx1[5, 1] <- min(nodes(graph))
output_mtx1[6, 1] <- min(nodes(graph))
return(output_mtx1)
}
graph_info(graph1)
graph_info <- function(graph){
info <- print(graph)
output_mtx1 <- matrix(, ncol = 1, nrow = 6)
rownames(output_mtx1) <- c("no. genes", "no. attractors", "no. attractors", "no. attractors", "no. attractors", "no. attractors")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- min(nodes(graph))
output_mtx1[2, 1] <- max(nodes(graph))
output_mtx1[3, 1] <- min(nodes(graph))
output_mtx1[4, 1] <- mean(nodes(graph))
output_mtx1[5, 1] <- min(nodes(graph))
output_mtx1[6, 1] <- min(nodes(graph))
return(output_mtx1)
}
graph_info(graph1)
graph_info(graph2)
graph_info <- function(graph){
info <- igraph.from.graphNEL(graph, unlist.attrs = TRUE)
degree_graph <- degree(info)
output_mtx1 <- matrix(, ncol = 1, nrow = 6)
rownames(output_mtx1) <- c("no. genes", "no. attractors", "no. attractors", "no. attractors", "no. attractors", "no. attractors")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- min(degree_graph)
output_mtx1[2, 1] <- median(degree_graph)
output_mtx1[3, 1] <- mean(degree_graph)
output_mtx1[4, 1] <- max(degree_graph)
output_mtx1[5, 1] <- no.clusters(info)
output_mtx1[6, 1] <- connComp(graph)
return(output_mtx1)
}
graph_info(graph2)
graph_info <- function(graph){
info <- igraph.from.graphNEL(graph, unlist.attrs = TRUE)
degree_graph <- degree(info)
output_mtx1 <- matrix(, ncol = 1, nrow = 6)
con_comp_graph <- connComp(graph)
sum_comp_graph <- (lapply(con_comp_graph),function(x) sum(lengths(x)))
rownames(output_mtx1) <- c("no. genes", "no. attractors", "no. attractors", "no. attractors", "no. attractors", "no. attractors")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- min(degree_graph)
output_mtx1[2, 1] <- median(degree_graph)
output_mtx1[3, 1] <- mean(degree_graph)
output_mtx1[4, 1] <- max(degree_graph)
output_mtx1[5, 1] <- no.clusters(info)
output_mtx1[6, 1] <- max(unlist(sum_comp_graph))
return(output_mtx1)
}
sum_comp_graph <- (lapply(con_comp_graph),function(x) sum(lengths(x))))
sum_comp_graph <- (lapply(con_comp_graph,function(x) sum(lengths(x))))
sum_comp_graph <- (lapply(con_comp_graph,function(x) sum(lengths(x)))
rownames(output_mtx1) <- c("no. genes", "no. attractors", "no. attractors", "no. attractors", "no. attractors", "no. attractors")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- min(degree_graph)
output_mtx1[2, 1] <- median(degree_graph)
output_mtx1[3, 1] <- mean(degree_graph)
output_mtx1[4, 1] <- max(degree_graph)
output_mtx1[5, 1] <- no.clusters(info)
output_mtx1[6, 1] <- max(unlist(sum_comp_graph))
return(output_mtx1)
}
network_info <- function(network){
info <- print(network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
return(output_mtx)
}
graph_info <- function(graph){
graph_info <- function(graph){
degree_graph <- degree(info)
output_mtx1 <- matrix(, ncol = 1, nrow = 6)
con_comp_graph <- connComp(graph)
sum_comp_graph <- (lapply(con_comp_graph,function(x) sum(lengths(x)))
rownames(output_mtx1) <- c("no. genes", "no. attractors", "no. attractors", "no. attractors", "no. attractors", "no. attractors")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- min(degree_graph)
output_mtx1[2, 1] <- median(degree_graph)
output_mtx1[3, 1] <- mean(degree_graph)
output_mtx1[4, 1] <- max(degree_graph)
output_mtx1[5, 1] <- no.clusters(info)
output_mtx1[6, 1] <- max(unlist(sum_comp_graph))
return(output_mtx1)
}
network_info <- function(network){
info <- print(network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("no. genes", "no. attractors")
colnames(output_mtx) <- ("values")
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
return(output_mtx)
}
graph_info(graph2)
graph_info <- function(graph){
info <- igraph.from.graphNEL(graph, unlist.attrs = TRUE)
degree_graph <- degree(info)
output_mtx1 <- matrix(, ncol = 1, nrow = 6)
con_comp_graph <- connComp(graph)
sum_comp_graph <- (lapply(con_comp_graph,function(x) sum(lengths(x))))
node_count <- max(unlist(sum_comp_graph))
rownames(output_mtx1) <- c("no. genes", "no. attractors", "no. attractors", "no. attractors", "no. attractors", "no. attractors")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- min(degree_graph)
output_mtx1[2, 1] <- median(degree_graph)
output_mtx1[3, 1] <- mean(degree_graph)
output_mtx1[4, 1] <- max(degree_graph)
output_mtx1[5, 1] <- no.clusters(info)
output_mtx1[6, 1] <- node_count
return(output_mtx1)
}
graph_info(graph2)
graph_info <- function(graph){
info <- igraph.from.graphNEL(graph, unlist.attrs = TRUE)
degree_graph <- degree(info)
output_mtx1 <- matrix(, ncol = 1, nrow = 6)
con_comp_graph <- connComp(graph)
sum_comp_graph <- (lapply(con_comp_graph,function(x) sum(lengths(x))))
node_count <- max(unlist(sum_comp_graph))
rownames(output_mtx1) <- c("Min Deg", "Median Deg", "Mean Deg", "Max Deg", "Connected Components", "Nodes")
colnames(output_mtx1) <- ("values")
output_mtx1[1, 1] <- min(degree_graph)
output_mtx1[2, 1] <- median(degree_graph)
output_mtx1[3, 1] <- mean(degree_graph)
output_mtx1[4, 1] <- max(degree_graph)
output_mtx1[5, 1] <- no.clusters(info)
output_mtx1[6, 1] <- node_count
return(output_mtx1)
}
graph_info(graph2)
graph_info(graph3)
graph_info(graph4)
graph_info(graph1)
network_info <- function(network){
info <- print(network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("Genes", "Attractors")
colnames(output_mtx) <- ("Values")
output_mtx[1, 1] <- length(network)
output_mtx[2, 1] <- length(getAttractors(network))
return(output_mtx)
}
network_info(igf)
GRNsummary<- function(graphname){
igraphname<-igraph.from.graphNel(graphname, unlist.attrs = TRUE)
degreegr<-degree(igraphname)
min_d<-min(degreegr)
med_d<-median(degreegr)
meen_d<-mean(degreegr)
max_d<-max(degreegr)
clusters<-no.clusters(igraphname)
con_comp_gx<-connComp(graphname)
sum_comp_gx<-(lapply(con_comp_gx, function(x) sum(lengths(x))))
node_count<-max(unlist(sum_comp_gx))
tableq3<- data.frame(row.names = c('Min Degree', 'Median Degree',
'Mean Degree', 'Max Degree',
'No. Connected Components',
'Nodes in largest CC'),
'Graph' = c(min_d, med_d, meen_d, max_d, clusters,
node_count))
tableq3
}
GRNsummary(graph2)
igraphname <- igraph.from.graphNEL(graphname, unlist.attrs = TRUE)
degreegr <- degree(igraphname)
GRNsummary<- function(graphname){
igraphname <- igraph.from.graphNEL(graphname, unlist.attrs = TRUE)
degreegr <- degree(igraphname)
min_d<-min(degreegr)
med_d<-median(degreegr)
meen_d<-mean(degreegr)
max_d<-max(degreegr)
clusters<-no.clusters(igraphname)
con_comp_gx<-connComp(graphname)
sum_comp_gx<-(lapply(con_comp_gx, function(x) sum(lengths(x))))
node_count<-max(unlist(sum_comp_gx))
tableq3<- data.frame(row.names = c('Min Degree', 'Median Degree',
'Mean Degree', 'Max Degree',
'No. Connected Components',
'Nodes in largest CC'),
'Graph' = c(min_d, med_d, meen_d, max_d, clusters,
node_count))
tableq3
}
GRNsummary<- function(graphname){
igraphname <- igraph.from.graphNEL(graphname, unlist.attrs = TRUE)
degreegr <- degree(igraphname)
min_d<-min(degreegr)
med_d<-median(degreegr)
meen_d<-mean(degreegr)
max_d<-max(degreegr)
clusters<-no.clusters(igraphname)
con_comp_gx<-connComp(graphname)
sum_comp_gx<-(lapply(con_comp_gx, function(x) sum(lengths(x))))
node_count<-max(unlist(sum_comp_gx))
tableq3<- data.frame(row.names = c('Min Degree', 'Median Degree',
'Mean Degree', 'Max Degree',
'No. Connected Components',
'Nodes in largest CC'),
'Graph' = c(min_d, med_d, meen_d, max_d, clusters,
node_count))
tableq3
}
GRNsummary(graph2)
GRNsummary(graph2)
}
GRNsummary(graph2)
GRNsummary<- function(graphname){
igraphname <- igraph.from.graphNEL(graphname, unlist.attrs = TRUE)
degreegr <- degree(igraphname)
min_d<-min(degreegr)
med_d<-median(degreegr)
meen_d<-mean(degreegr)
max_d<-max(degreegr)
clusters<-no.clusters(igraphname)
con_comp_gx<-connComp(graphname)
sum_comp_gx<-(lapply(con_comp_gx, function(x) sum(lengths(x))))
node_count<-max(unlist(sum_comp_gx))
tableq3<- data.frame(row.names = c('Min Degree', 'Median Degree',
'Mean Degree', 'Max Degree',
'No. Connected Components',
'Nodes in largest CC'),
'Graph' = c(min_d, med_d, meen_d, max_d, clusters,
node_count))
return (tableq3)
}
GRNsummary(graph2)
?connComp
?lappy
?RBGL
?layoutGraph
?renderGraph
?::
?graph
?adj
?igraph.from.graphNEL
network_info <- function(network){
info <- print(network)
output_mtx <- matrix(, ncol = 1, nrow = 2)
rownames(output_mtx) <- c("Genes", "Attractors")
colnames(output_mtx) <- ("Values")
output_mtx[1, 1] <- length(network$genes)
output_mtx[2, 1] <- length(getAttractors(network))
return(output_mtx)
}
network_info(igf)
